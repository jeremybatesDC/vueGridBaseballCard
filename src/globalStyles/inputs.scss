input {
  &[type="radio"],
  &[type="checkbox"] {
    width: var(--min-touch-target);
    height: var(--min-touch-target);
    //box-shadow: none;
    //background: transparent;
  }
  &[type="file"] {
    height: var(--min-touch-target);
    font-size: 1.6rem;
  }

  &[type="color"] {
    //-webkit-appearance: none;
    font-size: 1.6rem; // prevents ios zoom
    display: flex;
    width: var(--touch-target-large);
    height: var(--touch-target-large);
    //border-radius: 50%;
    //border: 1px solid transparent;
    border: none;
    overflow: hidden;
  }

  &[type="range"] {
    display: flex;
    -webkit-appearance: none;
    background-color: #888888;
    height: var(--min-touch-target);
    border-radius: var(--min-touch-target-half);
    //&:focus {
    //outline: none;
    //}
    &::-webkit-slider-thumb {
      //position: relative;
      -webkit-appearance: none;
      cursor: pointer;
      background-color: royalblue;
      width: var(--min-touch-target);
      height: var(--min-touch-target);
      border-radius: 50%;

      //z-index: 2;
    }
  }

  &[type="text"],
  &[type="email"],
  &[type="tel"] {
    &:focus {
      outline: 2px solid royalblue;
    }
  }
}

textarea {
  &:focus {
    outline: 2px solid royalblue;
  }
}

.rangeUI {
  &__label {
    font-size: 1.6rem;
    display: flex;
    flex-direction: column;
    .controls--l2 & {
      flex-grow: 1;
      flex-basis: 33.3333%;
      max-width: 20rem;
    }
    span {
      display: flex;
      text-transform: uppercase;
      font-variation-settings: var(--text-narrow);
      //padding-bottom: 0.4rem;
    }
    //output {
    //}
  }
  &__input {
    display: flex;
    -webkit-appearance: none;
    font-size: inherit;
    background-color: #888888;
    height: var(--min-touch-target-height);
    border-radius: var(--min-touch-target-half);
    &::-webkit-slider-thumb {
      //position: relative;
      -webkit-appearance: none;
      cursor: pointer;
      background-color: royalblue;
      width: var(--min-touch-target);
      height: var(--min-touch-target);
      border-radius: 50%;
      //z-index: 2;
    }
    //&--vertical {
    //  transform: rotate(-90deg);
    //}
  }
}

// color picker UI
.colorPicker {
  &__label {
    display: flex;
    font-size: 1.6rem;
    font-variation-settings: var(--text-short-wide);
    //flex-direction: column;
    width: var(--touch-target-large);
    height: var(--touch-target-large);
    //background-color: var(--backgroundcolorback);
    align-items: center;
    text-align: center;
    text-transform: uppercase;
    width: var(--touch-target-large);
    position: relative;

    &--front {
      color: var(--calcColorFront);
    }
    &--back {
      color: var(--calcColorBack);
    }
    span {
      position: absolute;
      left: 0;
      top: 50%;
      // width 100% was contributing to CLS i think
      width: var(--touch-target-large);
      line-height: 1;
      padding: 0;
      color: inherit;
      transform: translateY(-50%);
      font-variation-settings: var(--text-squeeze);
    }
  }

  &__input {
    background-color: inherit;
  }
  // arbitarary right now

  //&__helperText {
  //  max-width: 32ch;
  //}
}

.controls--l2 {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.radioBtns {
  &__fieldset {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    background-color: var(--background-for-overlay-controls);
    // need to set this here otherwise itS going to inherit the coor change from the card itseld (oops, my bad)

    color: #000;
    .controls--l2 & {
      background-color: transparent;
    }
    .playerImage__controls & {
      max-width: var(--touch-target-large);
      padding-top: 0.4rem;
      text-align: center;
      overflow: hidden;
    }
  }
  &__legend {
    font-variation-settings: var(--text-narrow);
    .playerImage__controls & {
      // unfortch display contents here makes this click throguh able... and closes the quasi modal
      // display: contents;

      padding-top: 0.4rem;
      background-color: var(--background-for-overlay-controls);
      width: 100%;

      text-align: center;
    }

    text-transform: uppercase;
  }
  &__wrapper {
    &--inner {
      background-color: var(--background-for-overlay-controls);
      .playerImage__controls & {
        padding-top: 0.4rem;
      }
    }
    &--each {
      display: flex;
      &:last-of-type {
        flex-direction: row-reverse;
      }
    }
  }
  &__label {
    display: inline-flex;
    width: var(--min-touch-target);
    height: var(--min-touch-target);
    padding: 0;
    .controls--l2 & {
      font-size: 1.6rem;
      padding: 0;
    }

    //cheat
    &.radioBtns__label.radioBtns__label {
      padding: 0;
    }

    &:not(:first-of-type) {
      .cardFront__controls & {
        box-shadow: -1px 0 rgba(0, 0, 0, 0.1);
      }
    }

    .playerImage__controls & {
      width: var(--touch-target-large);
      height: var(--touch-target-large);
      box-shadow: 0 -1px rgba(0, 0, 0, 0.1);
    }
  }
  &__input {
    + span {
      display: flex;
      flex-grow: 1;
      justify-content: center;
      align-items: center;
      text-transform: uppercase;
      font-variation-settings: var(--text-narrower);
    }
    &:checked {
      + span {
        color: #fff;
        background-color: royalblue;
      }
    }
  }
}

// FILE PICKER UI

.filePicker {
  &__form {
    display: flex;
    width: 100%;
    height: var(--min-touch-target);
    //padding: 0 6.4rem;
    //background-color: var(--background-for-overlay-controls);
  }
  &__wrapper {
    display: flex;
    flex-grow: 1;
    position: relative;
    //padding: 0 0.8rem;
    //border: 1px solid #000;
    overflow: hidden;
    align-items: center;
    text-align: center;
  }

  &__fieldset {
    display: flex;

    width: 100%;
    background-color: var(--background-for-overlay-controls);
    padding: 0 0.8rem;
    border: none;
    &:not(:first-of-type) {
      box-shadow: -1px 0 #666666;
    }

    // refactor in v2
    &:first-of-type {
      .filePicker__label {
        align-items: flex-start;
        span {
          margin-left: -3.2rem;
        }
      }
    }
    &:last-of-type {
      .filePicker__label {
        align-items: flex-end;
        span {
          margin-right: -2.4rem;
        }
      }
    }
  }
  &__legend {
    display: flex;
    font-variation-settings: var(--text-short-wide);

    text-transform: uppercase;
  }

  &__input {
    display: flex;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0.1;
  }
  &__label {
    display: flex;
    flex-direction: row;
    //flex-grow: 1;
    min-width: var(--touch-target-large);
    height: var(--touch-target-large);
    text-transform: uppercase;
    justify-content: center;
    align-items: center;
    color: #fff;
    box-shadow: -1px 0 #fff, 1px 0 #fff;
    cursor: pointer;
    //    &--addPic {
    //    }
    //
    //    &--addLogo {
    //    }

    span {
      font-variation-settings: var(--text-squeeze);
    }
  }
  &__icon {
    font-size: 6rem;
    display: flex;
    position: absolute;
    top: -1.25rem;
    left: -0.5rem;
    width: 100%;
    height: 100%;
    //transform: translate(-50%, -50%);
    text-align: center;
    font-style: normal;
    z-index: -1;
  }
}

[data-soi] {
  position: absolute;
  display: flex;
  flex-wrap: wrap;
  //flex-direction: column;
  //width: 100%;
  top: 100%;
  left: 0;
  right: 0;
  //background: rgba(0, 0, 0, 0.5);
  //width: 100%;
  padding: 0;
  visibility: hidden;
  overflow: visible;
  z-index: 2;
  background-color: rgba(0, 0, 0, 0.6666);
  label {
    display: flex;
    flex-wrap: wrap;
    //flex-basis: 50%;
    //width: 50%;
    font-size: 1.6rem;
    padding: 1.6rem;
    //color: #fff;
    // keep padding on LABEL so thereS no gap in focus targets that will close quasi modal
    &.rangeUI__label {
      color: #fff;
      width: 100%;
      padding: 0;
    }
  }

  // this should NOT have to be explicit -- missing a rul somewhere

  &.playerImage__controls {
    top: 0;
    left: var(--imgEditControlsOffset);
    right: var(--imgEditControlsOffset);
    padding-top: 0;
    flex-wrap: nowrap;
    background-color: transparent;
    .filePicker__label {
      flex-grow: 1;
      padding: 0 1.6rem;
    }
  }

  .card-back & {
    top: var(--min-touch-target);
  }
}

.omniClose {
  // this still flickers for some reason... need to think it through.. .
  &__label {
    display: none;
    position: absolute;
    top: var(--min-touch-target);
    background: none;
    opacity: 0;

    -webkit-tap-highlight-color: transparent;
    &:hover,
    &:active,
    &:focus {
      outline: none !important;
    }
    &--outside {
      left: -100vw;
      width: 300vw;
      height: 300vh;
      z-index: -1;
    }
    &--inside {
      // the left and right and only needed to avoid the side menus... kinda hacky rreally. I'd like maybe to give those side menus a z-index maybe...
      left: var(--min-touch-target);
      right: var(--min-touch-target);
      bottom: 0;
      z-index: 0;
    }

    // boom baby
  }
}

.checkbox--forReveal {
  &:checked {
    + [data-soi] {
      visibility: visible;
    }
    ~ .omniClose {
      &__label {
        &--outside {
          display: block;
        }
      }
    }
  }
}
